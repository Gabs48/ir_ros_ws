#! /usr/bin/env python

##
# ROS node for esting voice node as a parrot
#
# Gabriel Urbain <gabriel.urbain@gmail.com>
# Created in March 2016
# Copyright 2016 iRobotique ASBL
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
##


import rospy
from std_srvs.srv import *
from std_msgs.msg import String
import time

# Create node
rospy.init_node('test_voice_node', anonymous=True)
pub = rospy.Publisher('voice_ss', String, queue_size=1)

# In a loop
while True:
	# Wait to see service available
	rospy.wait_for_service('rec_mic')

	try:
		# Listen
		listen = rospy.ServiceProxy('rec_mic', Trigger)
		rsp = listen()

		# If recognised
		if rsp.success == True:
			rospy.loginfo("Recognized: " + rsp.message)

			# Speak
			rospy.loginfo("Synthetized: " + rsp.message)
			pub.publish(rsp.message)
			time.sleep(1)

	# Handle error
	except rospy.ServiceException as e:
		rospy.logerr("Service call failed: " + str(e))